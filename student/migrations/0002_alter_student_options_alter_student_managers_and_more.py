# Generated by Django 5.0.2 on 2024-02-08 19:18

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('Job_Opening', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
        ('student', '0001_initial'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='student',
            options={'verbose_name': 'user', 'verbose_name_plural': 'users'},
        ),
        migrations.AlterModelManagers(
            name='student',
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.RenameField(
            model_name='job_student_application',
            old_name='JobID',
            new_name='Job_ID',
        ),
        migrations.RenameField(
            model_name='job_student_application',
            old_name='StudentID',
            new_name='Student_ID',
        ),
        migrations.RenameField(
            model_name='student',
            old_name='Name',
            new_name='First_Name',
        ),
        migrations.RenameField(
            model_name='student_training_registration',
            old_name='StudentID',
            new_name='Student_ID',
        ),
        migrations.RenameField(
            model_name='student_training_registration',
            old_name='TrainingID',
            new_name='Training_ID',
        ),
        migrations.RemoveField(
            model_name='student',
            name='AccessToken',
        ),
        migrations.RemoveField(
            model_name='student',
            name='BlockAllApplications',
        ),
        migrations.RemoveField(
            model_name='student',
            name='Email',
        ),
        migrations.RemoveField(
            model_name='student',
            name='ResumeLink',
        ),
        migrations.RemoveField(
            model_name='student',
            name='StudentID',
        ),
        migrations.AddField(
            model_name='student',
            name='Access_Token',
            field=models.CharField(max_length=300, null=True),
        ),
        migrations.AddField(
            model_name='student',
            name='Block_All_Applications',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='student',
            name='Last_Name',
            field=models.CharField(default='ln', max_length=100),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='student',
            name='Resume_Link',
            field=models.CharField(default='blank', max_length=300),
        ),
        migrations.AddField(
            model_name='student',
            name='Student_ID',
            field=models.CharField(default='UIXXBRXX', max_length=8, unique=True),
        ),
        migrations.AddField(
            model_name='student',
            name='Username',
            field=models.CharField(default='uname', max_length=100),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='student',
            name='date_joined',
            field=models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined'),
        ),
        # migrations.AddField(
        #     model_name='student',
        #     name='first_name',
        #     field=models.CharField(blank=True, max_length=150, verbose_name='first name'),
        # ),
        migrations.AddField(
            model_name='student',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='student',
            name='is_active',
            field=models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active'),
        ),
        migrations.AddField(
            model_name='student',
            name='is_staff',
            field=models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status'),
        ),
        migrations.AddField(
            model_name='student',
            name='is_superuser',
            field=models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status'),
        ),
        migrations.AddField(
            model_name='student',
            name='last_login',
            field=models.DateTimeField(blank=True, null=True, verbose_name='last login'),
        ),
        # migrations.AddField(
        #     model_name='student',
        #     name='last_name',
        #     field=models.CharField(blank=True, max_length=150, verbose_name='last name'),
        # ),
        migrations.AddField(
            model_name='student',
            name='password',
            field=models.CharField(default='ps', max_length=128, verbose_name='password'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='student',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        # migrations.AddField(
        #     model_name='student',
        #     name='username',
        #     field=models.CharField(default='uname', error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username'),
        #     preserve_default=False,
        # ),
        migrations.AlterField(
            model_name='student',
            name='CGPA',
            field=models.DecimalField(decimal_places=2, default='5.00', max_digits=3),
        ),
        migrations.AlterField(
            model_name='student',
            name='Placed',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Job_Opening.job_opening'),
        ),
        # migrations.AddField(
        #     model_name='student',
        #     name='email',
        #     field=models.EmailField(blank=True, max_length=254, verbose_name='email address'),
        # ),
    ]
